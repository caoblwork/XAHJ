<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:s="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"
	default-lazy-init="true">

	<description>SpringSecurity安全配置</description>

	<!-- http安全配置 -->
	<s:http auto-config="true" use-expressions="true" access-denied-page="/commons/403.jsp">
		<s:intercept-url pattern="/commons/**" filters="none" />
		<s:intercept-url pattern="/components/**" filters="none" />
		<s:intercept-url pattern="/staticResource/**" filters="none" />
		<s:intercept-url pattern="/login.jsp" filters="none" />
		<s:intercept-url pattern="/index.jsp" access="isAuthenticated()" />

		<s:form-login login-page="/login.jsp" default-target-url="/index.jsp" authentication-failure-url="/login.jsp?error=1" />
		<s:logout logout-url="/j_spring_security_logout" logout-success-url="/login.jsp" invalidate-session="true" />
		<s:http-basic />
		<s:session-management invalid-session-url="/login.jsp?error=3" session-fixation-protection="none">
			<s:concurrency-control max-sessions="5" error-if-maximum-exceeded="false" />
		</s:session-management>
		<s:remember-me />

		<!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<s:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="exFilterSecurityInterceptor" />

	</s:http>

	<!-- 方法安全配置 -->
	<s:global-method-security pre-post-annotations="enabled" secured-annotations="enabled">
		<!-- AspectJ pointcut expression that locates our "post" method and applies security that way <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/> -->
	</s:global-method-security>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<bean id="exFilterSecurityInterceptor" class="com.hangu.framework.security.ExFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="exAccessDecisionManager" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>

	<!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<s:authentication-manager alias="authenticationManager">
		<s:authentication-provider user-service-ref="userDetailsService">
			<!--<s:password-encoder hash="md5"> <s:salt-source user-property="username"/> </s:password-encoder> -->
		</s:authentication-provider>
	</s:authentication-manager>

	<!-- 项目实现的用户查询服务,将用户信息查询出来 -->
	<bean id="userDetailsService" class="com.hangu.framework.security.UserDetailsServiceImpl" />

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<bean id="exAccessDecisionManager" class="com.hangu.framework.security.ExAccessDecisionManager" />

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<bean id="securityMetadataSource" class="com.hangu.framework.security.InvocationSecurityMetadataSourceService" />

</beans>