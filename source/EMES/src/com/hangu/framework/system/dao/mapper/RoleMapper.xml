<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.hangu.framework.system.dao.mapper.RoleMapper">
	<!-- 数据增加映射 -->
	<resultMap id="searchResultMap" type="com.hangu.framework.system.domain.Role">
		<result property="id" column="id" />

		<result property="code" column="code" />
		<result property="name" column="name" />
		<result property="description" column="description" />

		<result property="status" column="status" />
		<result property="version" column="version" />
		<result property="createDate" column="create_date" />
		<result property="createBy" column="create_by" />
		<result property="updateBy" column="update_by" />
		<result property="updateDate" column="update_date" />

		<!-- <collection property="models" javaType="ArrayList" ofType="com.hangu.framework.system.domain.Model" column="id" select="searchModelsByRoleId" /> -->
	</resultMap>

	<select id="searchModelsByRoleId" resultMap="com.hangu.framework.system.dao.mapper.ModelMapper.searchResultMap" parameterType="java.lang.String">
		SELECT m.* FROM
		r_role_model r,model m WHERE
		r.model_id = m.id AND r.role_id = #{value}
	</select>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		id,code,name,description,status,version,create_date,create_by,update_by,update_date
	</sql>

	<!-- 新增记录 -->
	<insert id="insert" parameterType="com.hangu.framework.system.domain.Role">
		insert into role (id,code,name,description,status,version,create_date,create_by,update_by,update_date) values
		(#{id},#{code},#{name},#{description},#{status},#{version},#{createDate},#{createBy},#{updateBy},#{updateDate})
	</insert>

	<!-- 单记录删除 -->
	<delete id="delete" parameterType="java.lang.String">
		delete from role where id=#{id}
	</delete>

	<!-- 批量记录删除 -->
	<delete id="deleteByIds" parameterType="java.util.List">
		delete from role where id in
		<foreach collection="list" item="ids" open="(" separator="," close=")">#{ids}</foreach>
	</delete>

	<!-- 单记录更新 -->
	<update id="update" parameterType="com.hangu.framework.system.domain.Role">
		update role
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null">
				name =#{name},
			</if>
			<if test="code != null">
				code =#{code},
			</if>
			<if test="description != null">
				description =#{description},
			</if>
			<if test="#{status} != null">
				status =#{status},
			</if>
			<if test="#{version} != null">
				version =#{version},
			</if>
			<if test="#{createDate} != null">
				create_date =#{createDate},
			</if>
			<if test="#{createBy} != null">
				create_by =#{createBy},
			</if>
			<if test="#{updateBy} != null">
				update_by =#{updateBy},
			</if>
			<if test="#{updateDate} != null">
				update_date =#{updateDate},
			</if>
		</trim>
		where id=#{id}
	</update>

	<!-- 查询记录BY ID -->
	<select id="getById" resultMap="searchResultMap" parameterType="java.lang.String">
		select
		<include refid="columns" />
		from role where id=#{id}
	</select>

	<!-- 查询所有记录 -->
	<select id="getAll" resultMap="searchResultMap" parameterType="java.lang.String">
		select
		<include refid="columns" />
		from role
	</select>

	<!-- 动态查询条件 -->
	<sql id="searchConditionSQL">
		<trim prefix="where" prefixOverrides="AND |OR ">
			<if test="code != null">
				and code like '%${code}%'
			</if>
			<if test="name != null">
				and name like '%${name}%'
			</if>
		</trim>
	</sql>

	<select id="search" resultMap="searchResultMap" useCache="true" parameterType="com.hangu.framework.system.vo.RoleSearchCondition">
		select
		<include refid="columns" />
		from role
		<include refid="searchConditionSQL" />
	</select>

	<select id="searchRoleByUserId" resultMap="searchResultMap" useCache="true" parameterType="java.lang.String">
		SELECT
		role.id as id,
		role.code as code,
		role.name as name,
		description as description,
		role.status as status
		FROM `user` ,role,r_user_role r
		WHERE r.user_id = `user`.id AND r.role_id = role.id AND r.user_id = #{value}

	</select>

	<select id="selectPage" resultMap="searchResultMap" useCache="true" parameterType="com.hangu.framework.system.vo.RoleSearchCondition">
		select
		<include refid="columns" />
		from role
		<include refid="searchConditionSQL" />
		ORDER BY create_date DESC
	</select>

	<select id="selectPageCount" resultType="long" parameterType="com.hangu.framework.system.vo.RoleSearchCondition">
		select count(id) from role
		<include refid="searchConditionSQL" />
	</select>

	<select id="findUsersByrolesId" resultType="com.hangu.framework.system.domain.User" parameterType="java.lang.String">
		SELECT name,password,login_id loginId,status 
		FROM `user` u ,r_user_role r
		WHERE u.id = r.user_id AND role_id = #{id}
	</select>

</mapper>